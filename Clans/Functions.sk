# Uses message function
on load
  set {clans::regex} to "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"
#  message("clans::messages::error::player-has-clan", "&cYou cannot use this command, because you have a clan!")
# functions start with "clans" due to it not interfearing with other functions
function clansHas(p: player) :: boolean:
  if {core::players::%{_p}'s uuid%::clans::hasClan} is true:
    return true
  if {core::players::%{_p}'s uuid%::clans::name} is set:
    delete {core::players::%{_p}'s uuid%::clans::*}
    # send "&cError - Player - In - Clan "
  return false
function clansIsBanned(s: string) :: boolean
  loop {clans::banned::*}:
    if lowercase loop-value is lowercase {_s}:
      return true
  return false
function clansIsCreated(s: string) :: boolean:
  loop {clans::created::*}:
    if lowercase loop-valye is lowercase {_s}:
      return true
  return false
function clansMatchRegex(s: string, maxLength: integer, minLength: integer) :: object:
  if length of {_s} < {minLength}:
    return "string-too-short"
  if length of {_s} > {_maxLength}:
    return "string-too-long"
  set {_s::*} to {_s} split by ""
  set {_regex} to {clans::regex}
  loop {_s::*}:
    if lowercase {_regex} does not contain loop-value:
      return false
  return true
function clansCreate(p: player, name: string, tag: string):
  set {_l::*} to "name", "tag"
  loop {_l::*}:
    if (clansHasClan({_%loop-value%})) = true:
      send getMessage("clans::messages::error::player-has-%loop-value%") to {_p}
      stop
  if (clansIsBanned({_n}) = true):
    send getMessage("clans::messages::error::name-banned") to {_p}
    stop
  if (clansIsBanned({_t) = true):
    send getMessage("clans::messages::error::tag-banned") to {_p}
    stop
  if (clansIsCreated({_n}) = true):
    send getMessage("clans::messages::error::name-created") to {_p}
    stop
  if (clansIsCreated({_t}) = true):
    send getMessage("clans::messages::error::tag-created") to {_p}
    stop
  if (clansMatchRegex({_n}, 12) = false):
    send getMessage("clans::messages::error::name-does-not-match-regex") to {_p}
    stop
  if (clansMatchRegex({_t}, 5) = false):
    send getMessage("clans::messages::error::tag-does-not-match-regex") to {_p}
    stop
  if (clansMatchRegex({_n}
